/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Alerta;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Observable;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author cristian
 */
public class PanelAlerta extends javax.swing.JPanel implements ActionListener {
    
    
    private OyenteVista oyenteVista;
    private MapaVista mapaVista;
    
    private List<Alerta> listaAlertas;
    
    private DefaultListModel modeloAlertas;
    
    private static final String TITULO = "Proteccion Civil";
    
    private static final String MENU_PRINCIPAL = "Menu principal";
    private static final String VOLVER_ATRAS = "Volver atras";
    private static final String ADD_ALERTA = "Anadir alerta";

    public static final String BOTON_LOGIN = "Iniciar sesion";
    public static final String BOTON_REGISTRO = "Registrarse";
    public static final String BOTON_HISTORIAL = "Historial de alertas";
    public static final String MENU_ITEM_PLANES = "Planes de proteccion";
    public static final String MENU_ITEM_RECURSOS = "Gestion de recursos";
    public static final String MENU_ITEM_ALERTAS = "Gestion de alertas";
    public static final String TEXTO_ALERTAS = "Alertas activas no gestionadas";
    public static final String MENU_ITEM_SELECCIONAR_ALERTA = 
                                                        "Seleccionar alerta";
    public static final String MENU_ITEM_SALIR = "Salir";
    /**
     * Creates new form PanelAlerta
     */
    public PanelAlerta(OyenteVista oyenteVista) {
        this.oyenteVista = oyenteVista;
        mapaVista = new MapaVista();
        modeloAlertas = new DefaultListModel();
        //modeloHistorial = new DefaultListModel();
        
        initComponents();

        mapa.setIcon(mapaVista.verIcono());
        panelMapa.revalidate();
        
        seleccionarAlerta.addActionListener(this);
        
        seleccionarAlerta.setToolTipText(MENU_ITEM_SELECCIONAR_ALERTA);
        seleccionarAlerta.setActionCommand(MENU_ITEM_SELECCIONAR_ALERTA);
        

        /*
        ** Crea el boton para aniadir alertas
        */
        anadirAlerta.setToolTipText(ADD_ALERTA);
        anadirAlerta.addActionListener(this);
        anadirAlerta.setActionCommand(ADD_ALERTA);
        anadirAlerta.setEnabled(true);
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        panelMapa = new javax.swing.JPanel();
        mapa = new javax.swing.JLabel();
        panelAlerta = new javax.swing.JPanel();
        seleccionarAlerta = new javax.swing.JButton();
        anadirAlerta = new javax.swing.JButton();
        textoAlertas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaActivas = new javax.swing.JList<>();

        jLabel1.setText("jLabel1");

        setMaximumSize(new java.awt.Dimension(189, 267));

        javax.swing.GroupLayout panelMapaLayout = new javax.swing.GroupLayout(panelMapa);
        panelMapa.setLayout(panelMapaLayout);
        panelMapaLayout.setHorizontalGroup(
            panelMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mapa, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );
        panelMapaLayout.setVerticalGroup(
            panelMapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mapa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        seleccionarAlerta.setText("Seleccionar alerta");
        seleccionarAlerta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarAlertaActionPerformed(evt);
            }
        });

        anadirAlerta.setText("Anadir alerta");
        anadirAlerta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anadirAlertaActionPerformed(evt);
            }
        });

        textoAlertas.setText("Alertas activas no gestionadas");

        listaActivas.setModel(modeloAlertas);
        jScrollPane1.setViewportView(listaActivas);

        javax.swing.GroupLayout panelAlertaLayout = new javax.swing.GroupLayout(panelAlerta);
        panelAlerta.setLayout(panelAlertaLayout);
        panelAlertaLayout.setHorizontalGroup(
            panelAlertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlertaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAlertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                    .addGroup(panelAlertaLayout.createSequentialGroup()
                        .addComponent(textoAlertas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8))
                    .addGroup(panelAlertaLayout.createSequentialGroup()
                        .addComponent(seleccionarAlerta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anadirAlerta)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelAlertaLayout.setVerticalGroup(
            panelAlertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAlertaLayout.createSequentialGroup()
                .addComponent(textoAlertas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAlertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seleccionarAlerta)
                    .addComponent(anadirAlerta))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAlerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelAlerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void anadirAlertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anadirAlertaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anadirAlertaActionPerformed

    private void seleccionarAlertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarAlertaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarAlertaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anadirAlerta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaActivas;
    private javax.swing.JLabel mapa;
    private javax.swing.JPanel panelAlerta;
    private javax.swing.JPanel panelMapa;
    private javax.swing.JButton seleccionarAlerta;
    private javax.swing.JLabel textoAlertas;
    // End of variables declaration//GEN-END:variables
 
    /**
     * Introduce las alertas activas a la lista                                 
     */
    public void introducirAlertasActivasALista(List listado){
        listaAlertas = listado;
        modeloAlertas.clear();
        for(int indice = 0; indice<listaAlertas.size();indice++){
            Alerta alerta = listaAlertas.get(indice);
            String info = alerta.informacion();
            modeloAlertas.addElement(info);
            mapaVista.introducirMarcadores(alerta.getCoordenadas().verX(),
                alerta.getCoordenadas().verY(), alerta.getId());
            mapaVista.introducirAlerta(alerta);
        }
        mapaVista.refrescar();
        mapa.setIcon(mapaVista.verIcono());
        revalidate();
    }

    
    public Alerta buscarAlertaActivaLista(String id){
        for(int indice = 0; indice<listaAlertas.size();indice++){
            Alerta alerta = listaAlertas.get(indice);
            if (id.equals(alerta.informacion())){
                return alerta;
            }
        } 
        return null;
    }
  
    
    /**
     * Muestra un mensaje de confirmacion, resultado de activar un plan
     */
    public void mensajeConfirmacionPlan(Alerta alerta){
        String texto = "Plan activado correctamente para la alerta :\n"
                +alerta.informacion();
        JOptionPane.showMessageDialog(null, texto);   
    }
    /**
     * Sobreescribe actionPerformed 
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        switch(e.getActionCommand()) {
            case MENU_ITEM_PLANES :
                MenuPlanesProteccion menuPlanes = new MenuPlanesProteccion(oyenteVista);
                menuPlanes.setVisible(true);
//                this.dispose();
                break;
            case MENU_ITEM_RECURSOS :
                break;    
            case MENU_ITEM_ALERTAS :
                oyenteVista.notificacion(
                                    OyenteVista.Evento.MENU_ITEM_ALERTAS, null);
                break;
            case MENU_ITEM_SALIR :
                oyenteVista.notificacion(OyenteVista.Evento.SALIR, null);
                break;
            /*case BOTON_HISTORIAL :
                removeAll();
                
                add(new JLabel("ERASDASDASD"));
                //add(aplicacionHistorial);
                revalidate();
                oyenteVista.notificacion(OyenteVista.Evento.HISTORIAL, null);
                break;*/
            /*case VOLVER_ATRAS :
                removeAll();
                revalidate();
                oyenteVista.notificacion(
                                OyenteVista.Evento.MENU_ITEM_ALERTAS, null);
                break;*/
            case MENU_ITEM_SELECCIONAR_ALERTA :
                String id = (String)listaActivas.getSelectedValue();
                Alerta alerta = buscarAlertaActivaLista(id);
                int seleccion = JOptionPane.showConfirmDialog
                        (null, 
                        "¿Activar el plan de proteccion para esta alerta?",
                        "Activar plan",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if (seleccion == JOptionPane.YES_OPTION){
                     mapaVista.eliminarAlerta(alerta);
                    listaAlertas.remove(alerta);
                    introducirAlertasActivasALista(listaAlertas);
                    mapaVista.actualizarMarcadores();
                    oyenteVista.notificacion(
                                OyenteVista.Evento.ACTIVAR_PLAN, alerta);
                }
               

                break;
            case ADD_ALERTA:
                new MenuAddAlerta(oyenteVista).setVisible(true);
                
                break;
        }        
    }
}
